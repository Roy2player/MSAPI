/**************************
 * This file is part of MSAPI.
 * License: see LICENSE.md
 * Contributor terms: see CONTRIBUTING.md
 *
 * This software is licensed under the Polyform Noncommercial License 1.0.0.
 * You may use, copy, modify, and distribute it for noncommercial purposes only.
 *
 * For commercial use, please contact: maks.angels@mail.ru
 *
 * Required Notice: MSAPI, copyright © 2021–2025 Maksim Andreevich Leonov, maks.angels@mail.ru
 */

.section.views {
    transition: all 0.3s ease 0s;
}

.view {
    position: absolute;
    background: var(--background-view);
    max-width: 100vw;
    max-height: 100vh;
    overflow: visible;
    width: min-content;
    display: flex;
    flex-flow: column;
    border: 1px solid var(--border-color-general);
    min-width: 50px;
    min-height: 50px;
}

.view.sticked>.handleResize {
    display: none;
}

.view>.viewContent {
    width: 100%;
    overflow: scroll;
    height: 100%;
}

.handleResize {
    position: absolute;
    background: transparent;
    z-index: 10;
}

.twoDirections {
    width: 10px;
    height: 10px;
}

.view>.handleResize.top.left.twoDirections {
    top: -5px;
    left: -5px;
    cursor: nwse-resize;
}

.view>.handleResize.top.right.twoDirections {
    top: -5px;
    right: -5px;
    cursor: nesw-resize;
}

.view>.handleResize.bottom.left.twoDirections {
    bottom: -5px;
    left: -5px;
    cursor: nesw-resize;
}

.view>.handleResize.bottom.right.twoDirections {
    bottom: -5px;
    right: -5px;
    cursor: nwse-resize;
}

.view>.handleResize.top.oneDirection {
    top: -5px;
    left: 5px;
    right: 5px;
    height: 10px;
    cursor: ns-resize;
}

.view>.handleResize.right.oneDirection {
    top: 5px;
    bottom: 5px;
    right: -5px;
    width: 10px;
    cursor: ew-resize;
}

.view>.handleResize.bottom.oneDirection {
    bottom: -5px;
    left: 5px;
    right: 5px;
    height: 10px;
    cursor: ns-resize;
}

.view>.handleResize {
    opacity: 0;
    background: var(--border-color-general);
    transition: all 0.3s ease 0s;
}

.view>.handleResize:hover,
.view>.handleResize:active,
.view>.handleResize:focus {
    opacity: 1;
}

.view.resizing .handleResize {
    opacity: 0.3;
}

.view>.handleResize.left.oneDirection {
    top: 5px;
    bottom: 5px;
    left: -5px;
    width: 10px;
    cursor: ew-resize;
}

.view.hidden {
    display: none;
}

.view>.viewHeader {
    font-size: 15px;
    height: 20px;
    display: flex;
    justify-content: space-between;
    user-select: none;
    border-bottom: 1px solid var(--border-color-general);
    flex: 0 0 auto;
    margin-bottom: -1px;
    z-index: 1;
    overflow: auto;
}

.view>.viewContent>* {
    position: relative;
    display: inline-block;
}

.view>.viewContent>*::after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: var(--background-element-header);
    z-index: 1;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease 0s;
}

.view>.viewContent>.changing::after {
    visibility: visible;
    opacity: 0.5;
}

.view>.viewContent>.appView {
    height: 100%;
    width: 100%;
    display: flex;
}

.view>.viewHeader>.title {
    padding: 0px 5px;
    display: flex;
    width: 100%;
    cursor: move;
    align-items: center;
    white-space: nowrap;
}

.view>.viewHeader>.options {
    display: flex;
}

.view>.viewHeader>.options>div:not(.template) {
    width: 30px;
    display: inline-block;
    cursor: pointer;
    border-left: 1px solid var(--border-color-general);
    position: relative;
    transition: all 0.3s ease 0s;
}

.view>.viewHeader>.options>div:not(.template):hover {
    background: var(--background-element-general-hover);
}

.view.sticked>.viewHeader>.title {
    cursor: default;
}

.view.sticked>.viewHeader>.options>.stick.on {
    background: var(--background-element-general-hover);
}

.view.sticked>.viewHeader>.options>div:not(.stick) {
    width: 0px;
    border-width: 0px;
}

.view>.viewHeader>.options>div>span {
    display: block;
    width: 100%;
    height: 100%;
    mask-size: 16px;
    mask-repeat: no-repeat;
    mask-position: center;
    background-color: var(--text-color-general);
}

.view>.viewHeader>.options>.close>span {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='18' y1='6' x2='6' y2='18'/%3E%3Cline x1='6' y1='6' x2='18' y2='18'/%3E%3C/svg%3E");
}

.view>.viewHeader>.options>.hide>span {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='5' y1='12' x2='19' y2='12'/%3E%3C/svg%3E");
}

.view>.viewHeader>.options>.maximize>span {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='4' y='4' width='16' height='16'/%3E%3C/svg%3E");
}

.view>.viewHeader>.options>.normalize>span {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='9' y='5' width='11' height='11'/%3E%3Crect x='5' y='9' width='11' height='11'/%3E%3C/svg%3E");
}

.view>.viewHeader>.options>.stick.on>span {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='8' r='4'/%3E%3Cline x1='12' y1='12' x2='12' y2='20'/%3E%3C/svg%3E");
}

.view>.viewHeader>.options>.stick>span {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='12' r='4'/%3E%3Cline x1='16' y1='16' x2='20' y2='20'/%3E%3Cline x1='4' y1='4' x2='8' y2='8'/%3E%3C/svg%3E");
}

.view>.viewHeader>.options>.template>span {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='3' y='3' width='18' height='18' rx='2'/%3E%3Cline x1='3' y1='9' x2='21' y2='9'/%3E%3C/svg%3E");
}

.view .customView {
    padding: 5px;
    background: var(--background-view);
    position: relative;
    width: fit-content;
    min-width: 100%;
}

.view .customView .items {
    margin-bottom: 5px;
    padding-bottom: 5px;
    border-bottom: 1px solid var(--border-color-sub-general);
    z-index: 0;
    position: relative;
}

.view .customView .items.vertical>:not(:last-child) {
    margin-bottom: 5px;
}

.view .customView .items.vertical>.item>* {
    height: 30px;
    padding: 0 7px;
    font-size: 14px;
}

.view .customView .items.vertical>.item>.title {
    display: flex;
    align-items: center;
}

.view .customView .items>.item>:where(select, input) {
    background: var(--background-element-general);
    transition: all 0.3s ease 0s;
}

.view .customView .items.vertical>.item>:where(select, input) {
    display: block;
    width: 100%;
}

.view .customView .items>.item>input:active,
.view .customView .items>.item>input:focus,
.view .customView .items>.item>input:hover {
    background: var(--background-element-general-hover);
}

.view .customView .items>.item>label {
    display: flex;
    height: 100%;
    width: 100%;
    align-items: center;
    position: relative;
}

.view .customView .items>.item>label>span {
    z-index: 1;
    cursor: pointer;
}

.view .customView .items>.item>label>input {
    cursor: pointer;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: var(--background-element-disabled);
    transition: all 0.3s ease 0s;
}


.view .customView .items>.item>label>input:checked {
    background: var(--background-element-enabled);
}

.view .customView>.button {
    padding: 0 7px;
    background: var(--background-element-general);
    transition: all 0.3s ease 0s;
    cursor: pointer;
    font-size: 15px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    user-select: none;
}

.view .customView>.button:hover {
    background: var(--background-element-general-hover);
}

.view .customView .items>.item> :where(input, select).invalid {
    background: var(--background-element-invalid);
}

.view .customView::before {
    content: "";
    position: absolute;
    background: var(--background-element-header);
    left: 0;
    top: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    display: block;
    z-index: -1;
    transition: all 0.3s ease 0s;
    opacity: 0;
    visibility: hidden;
}

.view.loading .customView::before {
    opacity: 0.6;
    visibility: visible;
    z-index: 1;
}

.view.loading .customView::after {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 75px;
    height: 75px;
    border-radius: 50%;
    border: 7px solid var(--loader-background);
    border-top-color: var(--loader-background-element);
    z-index: -1;
    transition: all 0.3s ease 0s;
    opacity: 0;
    visibility: hidden;
}

.view.loading .customView::after {
    animation: spin 1s linear infinite;
    opacity: 1;
    visibility: visible;
    z-index: 2;
}

@keyframes spin {
    0% {
        transform: translate(-50%, -50%) rotate(0deg);
    }

    100% {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}

.view>.viewFooter {
    position: relative;
    border-top: 1px solid var(--border-color-general);
    transition: all 0.3s ease 0s;
    opacity: 0;
    visibility: hidden;
    height: 0;
    width: 0;
    overflow: hidden;
}

.view>.viewFooter>.errorMessage {
    display: flex;
    align-items: center;
    font-size: 12px;
    color: var(--error-message-color);
}

.view>.viewFooter.visible {
    opacity: 1;
    visibility: visible;
    padding: 5px;
    height: auto;
    width: auto;
}

.view .customView .items.horizontal>.item input:not([type="checkbox"]),
.view .customView .items.horizontal>.item select {
    max-height: 30px;
    height: 30px;
    font-size: 12px;
    padding: 0 5px;
}

.view .customView .items.horizontal {
    display: grid;
    gap: 4px;
    grid-template-columns: repeat(5, 1fr);
    max-width: 1016px;
}

.view.maximized .customView .items.horizontal {
    max-width: 100%;
}

.view .customView .collection>.header {
    border-bottom: 1px dashed var(--border-color-sub-general);
    padding-bottom: 5px;
    margin-bottom: 5px;
    font-size: 15px;
    user-select: none;
}

.view .customView .items.horizontal>.item>span,
.view .customView .items.horizontal>.item>label {
    display: block;
    font-size: 12px;
    flex-grow: 1;
    position: relative;
    padding-bottom: 3px;
}

.view .customView .items.horizontal>.item>label {
    max-height: 30px;
    height: 30px;
}

.view .customView .items.horizontal>.item {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    margin-bottom: 5px;
    min-width: 200px;
}

.view .customView .const .items.horizontal>.item>:where(input, select) {
    appearance: textfield;
    cursor: default;
}

.view .viewContent input.select {
    cursor: pointer;
}

.view .customView .const .items.horizontal>.item input:not([type="checkbox"]) {
    background: var(--background-element-general) !important;
}

.view .customView .const .items.horizontal>.item label>input {
    cursor: default;
}

.view .customView .tables {
    margin-bottom: 5px;
    padding-bottom: 5px;
    border-bottom: 1px solid var(--border-color-sub-general);
    display: flex;
    flex-wrap: wrap;
}

.view>.viewContent>.tableView {
    padding-top: 5px;
}

.view>.viewContent>.tableView .tableWrapper>div>.header {
    padding: 0 5px;
}

.view>.viewContent>.selectView>.search {
    border-bottom: 1px solid var(--border-color-sub-general);
    padding-bottom: 5px;
    margin: 5px 0;
    display: flex;
}

.view>.viewContent>.selectView>.search>.caseSensitive {
    mask-size: contain;
    cursor: pointer;
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M3 16L7 4L11 16M5 12H9M15 16V12.5A2.5 2.5 0 0 1 20 12.5V16M20 12.5A2.5 2.5 0 0 0 15 12.5'/%3E%3C/svg%3E");
    width: 25px;
    mask-position: center right;
    mask-repeat: no-repeat;
    transition: all 0.3s ease 0s;
    background-color: var(--text-color-general);
}

.view>.viewContent>.selectView>.search>.caseSensitive.disabled {
    opacity: 0.3;
}

.view>.viewContent>.selectView>.search>input {
    width: 100%;
}

.view>.viewContent>.selectView>.search>.searchIco {
    margin-right: 5px;
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='11' cy='11' r='7'/%3E%3Cline x1='16.5' y1='16.5' x2='22' y2='22'/%3E%3C/svg%3E");
    width: 20px;
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
    background-color: var(--text-color-general);
}

.view>.viewContent>.selectView>.options>* {
    display: flex;
    justify-content: space-between;
    padding: 3px;
    cursor: pointer;
    font-size: 14px;
    transition: all 0.3s ease 0s;
}

.view>.viewContent>.selectView>.options>*:hover {
    background: var(--background-element-general-hover);
}

.view>.viewContent>.gridSettingsView>.group {
    display: flex;
    height: 25px;
    align-items: center;
    margin-bottom: 6px;
    padding-bottom: 5px;
    border-bottom: 1px solid var(--border-color-sub-general);
    user-select: none;
}

.view>.viewContent>.gridSettingsView>.group>.text {
    min-width: 65px;
}

.view>.viewContent>.gridSettingsView>.group>.action {
    width: 20px;
    height: 100%;
    margin-left: 10px;
    overflow: hidden;
}

.view>.viewContent>.gridSettingsView>.group>.action:hover::before {
    opacity: 1;
}

.view>.viewContent>.gridSettingsView>.group>.action.active::before {
    opacity: 1;
}

.view>.viewContent>.gridSettingsView>.group>.action::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    transition: all 0.3s ease 0s;
    cursor: pointer;
    background-color: var(--text-color-general);
    opacity: 0.3;
    mask-size: 95%;
    mask-repeat: no-repeat;
    mask-position: center;
}

.view>.viewContent>.gridSettingsView>.group:first-child {
    margin-top: 4px;
}

.action.alignLeft {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='3' y1='6' x2='15' y2='6'/%3E%3Cline x1='3' y1='12' x2='21' y2='12'/%3E%3Cline x1='3' y1='18' x2='11' y2='18'/%3E%3C/svg%3E");
}

.action.alignCenter {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='4' y1='6' x2='20' y2='6'/%3E%3Cline x1='8' y1='12' x2='16' y2='12'/%3E%3Cline x1='6' y1='18' x2='18' y2='18'/%3E%3C/svg%3E");
}

.action.alignRight {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='9' y1='6' x2='21' y2='6'/%3E%3Cline x1='3' y1='12' x2='21' y2='12'/%3E%3Cline x1='13' y1='18' x2='21' y2='18'/%3E%3C/svg%3E");
}

.action.ascending {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' viewBox='0 0 24 24'%3E%3Cpath d='M4 18h6M4 14h4M4 10h2M20 14v7M20 21l-3-3 3-3'/%3E%3C/svg%3E");
}

.action.descending {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' viewBox='0 0 24 24'%3E%3Cpath d='M4 6h6M4 10h4M4 14h2M20 10V3M20 3l-3 3 3 3'/%3E%3C/svg%3E");
}

.action.none {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' viewBox='0 0 24 24'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cline x1='8' y1='8' x2='16' y2='16'/%3E%3Cline x1='16' y1='8' x2='8' y2='16'/%3E%3C/svg%3E");
}

.action.filter {
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' viewBox='0 0 24 24'%3E%3Cpath d='M4 4h16l-6 8v6l-4 2v-8z'/%3E%3C/svg%3E");
}

.view>.viewContent>.gridSettingsView>.group>.action.disabled {
    width: 0;
    margin: 0;
}